# El gametype es el nombre de juego que usaremos!
gametype:    AjedrezBenedicto

# Cada color se define aparte o no
color:       blanco 
color:       negro 

# Board se puede definir como una lista de dimensiones.
# Tambien podria estar en blanco y comenzar con las definiciones
# de casillero de una.
board:       "a b c d e f g h" "1 2 3 4 5 6 7 8"

# Directions tiene el nombre de la direccion. Opcionalmente podria
# tener n numeros que hace la representacion 'n' dimensional.
directions:  n  0  1 
directions:  s  0 -1 
directions:  e  1  0  
directions:  o -1  0 

# Simetria ... un color y dos direcciones
symmetry:    negro   s    n
symmetry:    negro   n    s

# Zona. Tiene el nombre de zona (obligatorio), luego
# cero, uno o mas colores, indicando a que colores aplica y finalmente
# una lista de casilleros.
zone:        peones  blanco  a3  b3  c3  d3  e3  f3  g3  h3
zone:        peones  negro   a6  b6  c6  d6  e6  f6  g6  h6
zone:        coronacion  blanco  a8  b8  c8  d8  e8  f8  g8  h8
zone:        coronacion  negro   a1  b1  c1  d1  e1  f1  g1  h1

movetype:    enroque_corto
movetype:    enroque_largo

# Este define permite cambiar el color de la pieza
# amenazada
define:      flip direccion
             mark   1
             direccion
             while  en_tablero? && !occuped-own? do
               if occuped-opponent?
                 change-color  pieces-in-square
                 break
               end
               direccion
             end
             goto-mark   1

define:      flip-uno direccion
             mark   1
             direccion
             if  en_tablero? &&  occuped-opponent
               change-color  pieces-in-square
             end
             goto-mark   1

define:      flip-caballo
            flip-uno 'n; n; e'
            flip-uno 'n; n; o'
            flip-uno 's; s; e'
            flip-uno 's; s; o'
            flip-uno 'e; e; s'
            flip-uno 'o; o; s'
            flip-uno 'e; e; n'
            flip-uno 'o; o; n'

define:     flip-alfil
                flip 'n; e'
                flip 's; e'
                flip 'n; o'
                flip 's; o'

define:     flip-torre
                flip 'n' 
                flip 's' 
                flip 'o' 
                flip 'e' 

define:     flip-dama
              flip-alfil; flip-torre

define:     flip-peon
              flip-uno 'n; e'
              flip-uno 'n; o'

define:     flip-rey
              flip-uno 'n'
              flip-uno 's'
              flip-uno 'e'
              flip-uno 'o'
              flip-uno 'n; e'
              flip-uno 'n; o'
              flip-uno 's; e'
              flip-uno 's; o'


# Toda esta parte tiene que ver con
# las definiciones para hacer mas facil 
# la generacion de los miniprogramas
# de movimiento
#

define:     movida_torre direccion 
            direccion
            while en_tablero? && !occuped?  do
              assign-att  ya_movido , true
              flip-torre
              play
              direccion
            end

define:     movida_rey  direccion
            direccion
            stop if !en_tablero?
            stop if occuped?
            assign-att 'ya_movido', true
            flip-rey
            play

define:     movida_caballo  direccion
            direccion
            stop if !en_tablero?
            stop if occuped?
            flip-caballo
            play

define:     movida_dama  direccion
            direccion
            while en_tablero? && !occuped?  do
              flip-dama
              play
              direccion
            end

define:     movida_alfil  direccion
            direccion
            while en_tablero? && !occuped?  do
              flip-alfil
              play
              direccion
            end


# Listo, ahora si ... se vienen las definiciones de piezas
#
piece:      torre
attribute:  ya_movido   false
move:       
            movida_torre n
move:       
            movida_torre s
move:       
            movida_torre e
move:       
            movida_torre o

piece:      alfil
move:       
            movida_alfil "n; e"
move:       
            movida_alfil "s; e"
move:       
            movida_alfil "s; o"
move:       
            movida_alfil "n; o"

piece:      dama
move:       
            movida_dama "n"
move:       
            movida_dama "s"
move:       
            movida_dama "o"
move:       
            movida_dama "e"
move:       
            movida_dama "n; e"
move:       
            movida_dama "s; e"
move:       
            movida_dama "s; o"
move:       
            movida_dama "n; o"

piece:      caballo
move:       
            movida_caballo 'n; n; e'
move:       
            movida_caballo 'n; n; o'
move:       
            movida_caballo 's; s; e'
move:       
            movida_caballo 's; s; o'
move:       
            movida_caballo 'e; e; s'
move:       
            movida_caballo 'o; o; s'
move:     
            movida_caballo 'e; e; n'
move:      
            movida_caballo 'o; o; n' 


piece:      "peon"
move:       
            n
            stop if !en_tablero?
            stop if occuped? 
            if  en_zona? coronacion
               transform 'caballo'
               flip-caballo
               play
               transform 'torre'
               flip-torre
               play
               transform 'alfil'
               flip-alfil
               play
               transform 'dama'
               flip-dama
               play
            end
            flip-peon
            play
            if en_zona? 'peones'
              n
              flip-peon
              play if !occuped?
            end

piece:      rey            
attribute:  ya_movido   false
move:
            movida_rey "n" 
move:
            movida_rey "s"
move:
            movida_rey "e"
move:
            movida_rey "o"
move:
            movida_rey "n; e;"
move:
            movida_rey "n; o;"
move:
            movida_rey "s; o;"
move:
            movida_rey "s; e;"
move:       enroque_corto
            stop if ya_movido?
            e; stop if occuped?; stop if attaked-opp?
            mark
            e; stop if occuped?; stop if attaked-opp?
            e; stop if occuped-opponent?;
            stop if !occuped? torre; 
            stop if ya_movido?;
            move pieces_in_square mark 
            flip-torre
            casillero_inicial; e; e; 
            assign-att 'ya_movido', true
            flip-rey
            play

move:       enroque_largo
            stop if ya_movido?
            o; stop if occuped?; stop if attaked-opp?
            mark
            o; stop if occuped?; stop if attaked-opp?
            o; stop if occuped?
            o; stop if occuped-opponent?; 
            stop if !occuped? torre; 
            stop if ya_movido?;
            move pieces_in_square mark 
            flip-torre
            casillero_inicial; o; o; 
            assign-att 'ya_movido', true
            flip-rey
            play


# Listo con la definicion de piezas ... mas cosas
#
# Se vienen los finales. Son tambien distintos mini programas!
ending:    
            win  if piece-count-opponent "rey" = 0
ending:     
            draw if stalemated?
ending:
            draw if repite_posicion? 3 

sequence:   blanco negro
start:      torre    blanco  a1  h1
start:      torre    negro   a8  h8
start:      caballo  blanco  b1  g1
start:      caballo  negro   b8  g8
start:      alfil    blanco  c1  f1
start:      alfil    negro   c8  f8
start:      dama     blanco  d1
start:      dama     negro   d8
start:      rey      blanco  e1
start:      rey      negro   e8
start:      peon     blanco  a2  b2  c2  d2
start:      peon     blanco  e2  f2  g2  h2
start:      peon     negro   a7  b7  c7  d7
start:      peon     negro   e7  f7  g7  h7
  

notation:   rey     K
notation:   dama    Q
notation:   torre   R
notation:   alfil   B
notation:   caballo N
notation:   peon    ""
notation:   captured-mark   x
notation:   mark           "-"
notation:   default   piece-name  captured-mark      target
notation:   onrepeat  piece-name  origin             mark    target         
notation:   enroque_corto   "0-0"
notation:   enroque_largo   "0-0-0"

# Aca vienen las definiciones de tablero ... simplemente voy a hacer
# un damero de dimensiones estandares
graph-board: checkerboard   384 384    $FFFFFF $F0A0A0 
graph-piece: standard-king     rey      48 48
graph-piece: standard-queen    dama     48 48
graph-piece: standard-bishop   alfil    48 48
graph-piece: standard-knight   caballo  48 48
graph-piece: standard-rook     torre    48 48
graph-piece: standard-pawn     peon     48 48
